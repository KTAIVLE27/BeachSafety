# Generated by Django 5.0.6 on 2024-07-01 06:43

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Authority",
            fields=[
                ("auth_no", models.AutoField(primary_key=True, serialize=False)),
                ("auth_name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "db_table": "authority",
            },
        ),
        migrations.CreateModel(
            name="Beach",
            fields=[
                (
                    "beach_no",
                    models.AutoField(max_length=20, primary_key=True, serialize=False),
                ),
                ("beach_name", models.CharField(max_length=100)),
                ("beach_region", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "beach",
            },
        ),
        migrations.CreateModel(
            name="CCTV",
            fields=[
                ("cctv_code", models.AutoField(primary_key=True, serialize=False)),
                ("cctv_location", models.CharField(max_length=255)),
                ("cctv_url", models.URLField(max_length=255)),
                (
                    "beach_no",
                    models.OneToOneField(
                        db_column="beach_no",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.beach",
                    ),
                ),
            ],
            options={
                "db_table": "cctv",
            },
        ),
        migrations.CreateModel(
            name="RipApi",
            fields=[
                (
                    "beach_code",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("date_type", models.CharField(max_length=10)),
                ("date", models.DateTimeField()),
                ("result_type", models.CharField(max_length=10)),
                (
                    "beach_no",
                    models.OneToOneField(
                        db_column="beach_no",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.beach",
                    ),
                ),
            ],
            options={
                "db_table": "rip_api",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "user_no",
                    models.AutoField(
                        db_column="user_no", primary_key=True, serialize=False
                    ),
                ),
                ("user_password", models.CharField(max_length=128)),
                ("user_phone", models.CharField(max_length=20)),
                ("user_name", models.CharField(max_length=100)),
                ("user_birth", models.DateField()),
                (
                    "user_address",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("user_id", models.CharField(max_length=50, unique=True)),
                ("user_email", models.EmailField(max_length=254, unique=True)),
                ("user_joinday", models.DateTimeField(auto_now_add=True)),
                (
                    "auth_no",
                    models.OneToOneField(
                        db_column="auth_no",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.authority",
                    ),
                ),
            ],
            options={
                "db_table": "user",
            },
        ),
        migrations.CreateModel(
            name="Notice_board",
            fields=[
                (
                    "board_id",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("notice_title", models.CharField(max_length=200)),
                ("notice_writer", models.CharField(max_length=100)),
                ("notice_img", models.CharField(blank=True, max_length=255, null=True)),
                ("notice_hit", models.IntegerField(default=0)),
                ("notice_rdate", models.DateField(blank=True, null=True)),
                ("notice_ield", models.TextField(blank=True, null=True)),
                (
                    "beach_no",
                    models.ForeignKey(
                        db_column="beach_no",
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="main.beach",
                    ),
                ),
                (
                    "user_no",
                    models.ForeignKey(
                        db_column="user_no",
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="main.user",
                    ),
                ),
            ],
            options={
                "db_table": "notice_board",
            },
        ),
        migrations.CreateModel(
            name="Event_board",
            fields=[
                (
                    "board_id",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("event_title", models.CharField(max_length=200)),
                ("event_writer", models.CharField(max_length=100)),
                ("event_img", models.CharField(blank=True, max_length=255, null=True)),
                ("event_hit", models.IntegerField(default=0)),
                ("event_rdate", models.DateField(blank=True, null=True)),
                ("event_ield", models.TextField(blank=True, null=True)),
                (
                    "beach_no",
                    models.ForeignKey(
                        db_column="beach_no",
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="main.beach",
                    ),
                ),
                (
                    "user_no",
                    models.ForeignKey(
                        db_column="user_no",
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="main.user",
                    ),
                ),
            ],
            options={
                "db_table": "event_board",
            },
        ),
    ]
